1、递归的master公式
子规模问题一样才能使用master公式     O(n)时间复杂度，也叫最差时间复杂度，读作big o n
2、master公式可以用于计算递归的时间复杂度
master公式的使用：
T(N) = a*T(N/b) + O(N^d)
1) log(b,a) > d -> 复杂度为O(N^log(b,a))
2) log(b,a) = d -> 复杂度为O(N^d * logN)
3) log(b,a) < d -> 复杂度为O(N^d)

3、归并排序
归并排序用到了递归，因此可以使用master公式求时间复杂度。得到O(nlogn)

4、归并排序求小和问题
小和问题
在一个数组中，每一个数左边比当前数小的数累加起来，叫做这个数组
的小和。求一个数组 的小和。
例子:[1,3,4,2,5] 1左边比1小的数，没有; 3左边比3小的数，1; 4左
边比4小的数，1、3; 2左边比2小的数，1; 5左边比5小的数，1、3、4、
2; 所以小和为1+1+3+1+1+3+4+2=16
归并排序求小和问题不会漏算和重算。

5、归并排序求逆序对问题
逆序对问题 在一个数组中，左边的数如果比右边的数大，则折两个数
构成一个逆序对，请打印所有逆序对。
和小和问题差不多

6、快速排序1.0版本：取最后一个数为基准值
快速排序2.0版本：与荷兰国旗类似，荷兰国旗有三种颜色
快排最差情况下时间复杂度为O(n^2)
快排3.0版本：随意选一个数做划分，使用数学累加求期望，最后得到时间复杂度O(nlogn)，这样就不是一个最差的情况了
快速排序的空间复杂度O(logn)，它类似于一棵二叉树



